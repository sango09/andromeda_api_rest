# Generated by Django 3.0.11 on 2021-02-18 19:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del registro', verbose_name='creado el')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la ultima modificación', verbose_name='modificado el')),
                ('email', models.EmailField(error_messages={'unique': 'Este usuario ya fue registrado'}, max_length=254, unique=True, verbose_name='correo electronico')),
                ('is_client', models.BooleanField(default=True, help_text='Ayuda a distinguir facilmente a los usuarios registrados y sus roles ', verbose_name='cliente')),
                ('is_admin', models.BooleanField(default=False, help_text='Rol de coordinador, tiene los permisos generales del sistema', verbose_name='coordinador')),
                ('is_employee', models.BooleanField(default=False, help_text='Rol de empleado, agrupando administrativos y profesores en un solo rol', verbose_name='empleados')),
                ('is_assistant', models.BooleanField(default=False, help_text='Rol de auxiliar de sistemas, tiene los permisos basicos para utilizar el sistema', verbose_name='auxiliar de sistemas')),
                ('is_verified', models.BooleanField(default=True, help_text='Se establece como verdadero cuando el usuario confirma su correo electronico', verbose_name='verificado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'tbl_usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del registro', verbose_name='creado el')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la ultima modificación', verbose_name='modificado el')),
                ('picture', models.ImageField(blank=True, default='users/pictures/default-profile.png', upload_to='users/pictures/', verbose_name='imagen de perfil')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_perfiles',
            },
        ),
    ]
